---
- name: 检查内存是否充足
  block:
    - name: 解析 JVM 最大堆内存 (-Xmx)
      set_fact:
        xmx_value: "{{ service.param.jvmOpts | regex_search(xmx_regex, '\\1') | first | default('0') }}"
        xmx_unit: "{{ service.param.jvmOpts | regex_search(xmx_regex, '\\2') | first | default('') | lower }}"
      vars:
        xmx_regex: ".*-Xmx(\\d+(?:\\.\\d+)?)([kKmMgG]?)\\b.*"

    - name: 检查是否成功解析 -Xmx 参数
      assert:
        that:
          - xmx_value is defined
          - xmx_value | float > 0
          - xmx_unit is defined and xmx_unit in ['', 'k', 'm', 'g']
        fail_msg: "无法从 jvmOpts 中提取有效的 -Xmx 参数，请确认格式类似 -Xmx512m、-Xmx2g 或 -Xmx102400"

    - name: 将 -Xmx 单位统一转换为 MB
      set_fact:
        required_memory_mb: >-
          {{
            (xmx_value | float * 1024) if xmx_unit == 'g'
            else (xmx_value | float) if xmx_unit == 'm'
            else (xmx_value | float / 1024) if xmx_unit == 'k'
            else (xmx_value | float / (1024 * 1024)) if xmx_unit == ''
            else 0
          }}

    - name: 检查系统内存是否满足指定 JVM 内存要求
      assert:
        that:
          - "(ansible_facts.memory_mb.nocache.free | float) >= (required_memory_mb | float)"
        fail_msg: "系统可用内存不足！系统可用内存: {{ ansible_facts.memory_mb.nocache.free | float }} MB，需求JVM内存: {{ required_memory_mb | float | round(2) }} MB"

- name: 检查安装目录磁盘占用
  block:
    - name: 获取安装目录路径
      stat:
        path: "{{ service.path.installDir }}"
      register: path_stat

    - name: 验证安装目录是否存在
      assert:
        that:
          - path_stat.stat.exists
        fail_msg: "安装目录 {{ service.path.installDir }} 不存在，请先创建或指定有效路径"

    - name: 获取磁盘信息
      shell: |
        df -kP "{{ service.path.installDir }}" | awk 'NR==2 {print $2 " " $4 " " $6}'
      register: df_output
      changed_when: false
      args:
        executable: /bin/bash

    - name: 解析并转换磁盘信息
      set_fact:
        fs_total_kb: "{{ (df_output.stdout | default('0 0 /')).split()[0] | int }}"
        fs_avail_kb: "{{ (df_output.stdout | default('0 0 /')).split()[1] | int }}"
        actual_mount_point: "{{ (df_output.stdout | default('0 0 /')).split()[2] }}"

    - name: 验证磁盘信息
      assert:
        that:
          - fs_total_kb | int > 0
          - fs_avail_kb | int >= 0
          - actual_mount_point is defined
        fail_msg: |
          无法获取有效的磁盘信息！
          检查路径: {{ service.path.installDir }}
          DF命令输出: {{ df_output.stdout | default('无输出') }}
          实际挂载点: {{ actual_mount_point | default('未知') }}

    - name: 检查磁盘占用
      assert:
        that:
          - (fs_avail_kb | int > (fs_total_kb | int * 0.05)) or (fs_avail_kb | int > (min_free_gb | float * 1024 * 1024))
        fail_msg: |
          磁盘空间不足！
          路径: {{ service.path.installDir }}
          挂载点: {{ actual_mount_point }}
          总空间: {{ (fs_total_kb | int / 1024 / 1024) | round(2) }} GB
          可用空间: {{ (fs_avail_kb | int / 1024 / 1024) | round(2) }} GB
          要求: 可用空间 >5% 或 >{{ min_free_gb }} GB
      vars:
        min_free_gb: 5  # 5GB