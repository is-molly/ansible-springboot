#!/bin/bash

set -o nounset
set -o errexit

SCRIPT_DIR=$(dirname "$0")
SCRIPT_NAME=$(basename "$0")

cd ${SCRIPT_DIR} || exit 1

function usage() {
    echo -e "\033[33mUsage:\033[0m unictl COMMAND [args]"
    cat <<EOF
-------------------------------------------------------------------------------------
Ansible SpringBoot OPS:
    start       <config file>          to start same springboot application
    stop        <config file>          to stop same springboot application

EOF
}

function logger() {
    TIMESTAMP=$(date +'%Y-%m-%d %H:%M:%S')
    local FNAME=$(basename "${BASH_SOURCE[1]}")
    local SOURCE="\033[36m[$FNAME:${BASH_LINENO[0]}]\033[0m"
    case "$1" in
        debug)
            echo -e "\033[36m$TIMESTAMP\033[0m $SOURCE \033[36mDEBUG $2\033[0m"
            ;;
        info)
            echo -e "\033[36m$TIMESTAMP\033[0m $SOURCE \033[32mINFO $2\033[0m"
            ;;
        warn)
            echo -e "\033[36m$TIMESTAMP\033[0m $SOURCE \033[33mWARN $2\033[0m"
            ;;
        error)
            echo -e "\033[36m$TIMESTAMP\033[0m $SOURCE \033[31mERROR $2\033[0m"
            ;;
        *) ;;
    esac
}

function install() {
    local configFile=$1
    ansible-playbook -e "@$configFile" -i $SCRIPT_DIR/test.sh  $SCRIPT_DIR/playbooks/test.yml
}

### Main Lines ##################################################
function main() {
  # check bash shell
  readlink /proc/$$/exe|grep -q "bash" || { logger error "you should use bash shell only"; exit 1; }

  # check 'ansible' executable
  which ansible > /dev/null 2>&1 || { logger error "need 'ansible', try: 'pip install ansible'"; usage; exit 1; }

  [ "$#" -gt 0 ] || { usage >&2; exit 2; }

  case "$1" in
      (install)
          [ "$#" -eq 2 ] || { usage >&2; exit 2; }
          install "${@:2}"
          ;;
      (*)
          usage
          exit 0
          ;;
  esac
}

main "$@"