#!/bin/bash

set -o nounset
set -o errexit

SCRIPT_DIR=$(dirname "$0")
SCRIPT_NAME=$(basename "$0")
CONFIG_FILE=""
INVENTORY_FILE=""

cd "${SCRIPT_DIR}" || exit 1

function usage() {
    echo -e "\033[33mUsage:\033[0m unictl COMMAND [args]"
    cat <<EOF
-------------------------------------------------------------------------------------
Ansible SpringBoot OPS:
    install     <config file>          to install same springboot application
    update      <config file>          to update same springboot application
    start       <config file>          to start same springboot application
    stop        <config file>          to stop same springboot application
    restart     <config file>          to restart same springboot application
    statusCheck <config file>          springboot application status check
    uninstall   <config file>          to uninstall same springboot application
EOF
}

function logger() {
    TIMESTAMP=$(date +'%Y-%m-%d %H:%M:%S')
    local FNAME=$(basename "${BASH_SOURCE[1]}")
    local SOURCE="\033[36m[$FNAME:${BASH_LINENO[0]}]\033[0m"
    case "$1" in
        debug)
            echo -e "\033[36m$TIMESTAMP\033[0m $SOURCE \033[36m[DEBUG] $2\033[0m"
            ;;
        info)
            echo -e "\033[36m$TIMESTAMP\033[0m $SOURCE \033[32m[INFO] $2\033[0m"
            ;;
        warn)
            echo -e "\033[36m$TIMESTAMP\033[0m $SOURCE \033[33m[WARN] $2\033[0m"
            ;;
        error)
            echo -e "\033[36m$TIMESTAMP\033[0m $SOURCE \033[31m[ERROR] $2\033[0m"
            ;;
        *) ;;
    esac
}

function action() {
    ansible-playbook -e "@$CONFIG_FILE" -i "$INVENTORY_FILE" $SCRIPT_DIR/playbooks/action.yml --tags "$1"
}

### Main Lines ##################################################
function main() {
  # check bash shell
  readlink /proc/$$/exe|grep -q "bash" || { logger error "you should use bash shell only"; exit 1; }

  # check 'ansible-playbook' executable
  which ansible > /dev/null 2>&1 || { logger error "need 'ansible', try: 'pip install ansible'"; usage; exit 1; }

  # check config file
  [ "$#" -eq 2 ] || { usage >&2; exit 1; }
  CONFIG_FILE=$2
  [ ! -e $CONFIG_FILE ] && { logger error "config file [ $CONFIG_FILE ] not exist"; exit 1; }

  # check inventory file
  INVENTORY_FILE=$(awk '/inventory:/ {gsub(/["'\'']/, "", $NF); print $NF}' $CONFIG_FILE)
  [ ! -e $INVENTORY_FILE ] && { logger error "inventory file [ $INVENTORY_FILE ] not exist"; exit 1; }

  case "$1" in
    (install|update|start|stop|restart|statusCheck|uninstall)
      action "$1"
      ;;
    (*)
      usage
      exit 1
      ;;
  esac
}

main "$@"